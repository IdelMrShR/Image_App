{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React\\\\react-native\\\\myProject\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Navbar } from \"./src/Navbar\";\nimport { _Image } from \"./src/Image\";\nimport { ScreenImage } from \"./src/ScreenImage\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Image App\",\n    component: HomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Image\",\n    component: currentImageScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      images = _React$useState2[0],\n      setImages = _React$useState2[1];\n\n  var loadDB = function loadDB() {\n    fetch('https://api.unsplash.com/photos/?client_id=ab3411e4ac868c2646c0ed488dfd919ef612b04c264f3374c97fff98ed253dc9').then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return setImages(json);\n    }).catch(function (err) {\n      return console.log('Error: ', err);\n    });\n  };\n\n  loadDB();\n\n  var fullScreen = function fullScreen(source, id) {\n    navigation.navigate('Image', {\n      source: source\n    });\n  };\n\n  var imgs = images.map(function (img) {\n    return React.createElement(_Image, {\n      source: img.urls.regular,\n      id: img.id,\n      fullScreen: fullScreen,\n      key: img.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    });\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, imgs, React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar currentImageScreen = function currentImageScreen(_ref2) {\n  var route = _ref2.route,\n      navigation = _ref2.navigation;\n  var _route$params = route.params,\n      source = _route$params.source,\n      id = _route$params.id;\n\n  var homeScreen = function homeScreen() {\n    navigation.navigate('Image App', {});\n  };\n\n  return React.createElement(ScreenImage, {\n    source: source,\n    id: id,\n    homeScreen: homeScreen,\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    backgroundColor: '#333'\n  }\n});","map":{"version":3,"sources":["D:/React/react-native/myProject/App.js"],"names":["StatusBar","React","Navbar","_Image","ScreenImage","NavigationContainer","createStackNavigator","Stack","App","HomeScreen","currentImageScreen","navigation","useState","images","setImages","loadDB","fetch","then","res","json","catch","err","console","log","fullScreen","source","id","navigate","imgs","map","img","urls","regular","styles","container","route","params","homeScreen","StyleSheet","create","height","backgroundColor"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport {Image, StyleSheet, Text, View} from 'react-native';\nimport {Navbar} from './src/Navbar'\nimport {_Image} from './src/Image'\nimport {ScreenImage} from './src/ScreenImage'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\n\nconst Stack = createStackNavigator()\n\n\nexport default function App() {\n\n    return (\n        <NavigationContainer>\n            <Stack.Navigator>\n                <Stack.Screen name='Image App' component={HomeScreen}/>\n                <Stack.Screen name='Image' component={currentImageScreen}/>\n            </Stack.Navigator>\n        </NavigationContainer>\n    );\n}\n\nconst HomeScreen = ({ navigation }) =>{\n    const [images, setImages] = React.useState([])\n\n    const loadDB = () => {\n        fetch('https://api.unsplash.com/photos/?client_id=ab3411e4ac868c2646c0ed488dfd919ef612b04c264f3374c97fff98ed253dc9')\n            .then(res => res.json())\n            .then(json => setImages(json))\n            .catch(err => console.log('Error: ', err))\n    }\n\n    loadDB()\n\n    const fullScreen = (source, id) => {\n        navigation.navigate('Image', {source})\n    }\n\n    const imgs = images.map(img => {\n        return <_Image source={img.urls.regular} id={img.id} fullScreen={fullScreen} key={img.id}/>\n            ;\n    })\n\n\n    return(\n    <View style={styles.container}>\n        {imgs}\n        <StatusBar style=\"auto\" />\n    </View>\n    );\n    }\n\n    const currentImageScreen = ({ route, navigation }) =>{\n        const { source, id } = route.params\n        const homeScreen = () =>{\n            navigation.navigate('Image App', {})\n        }\n    return(\n        <ScreenImage source={source} id={id} homeScreen={homeScreen} key={id}/>\n    );\n    }\n\nconst styles = StyleSheet.create({\n  container: {\n\n      height: '100%',\n      backgroundColor: '#333'\n  },\n\n});\n"]},"metadata":{},"sourceType":"module"}